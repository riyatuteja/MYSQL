Joins:
A JOIN clause is used to combine rows from two or more tables, 
based on a related column between them.

1.INNER JOIN:
The INNER JOIN keyword selects records that have matching values in both tables.
Syntax –
● SELECT column_name(s) FROM table1
INNER JOIN table2
ON table1.column_name = table2.column_name;
Ex –
● SELECT Orders.OrderID, Customers.CustomerName FROM Orders
INNER JOIN Customers ON Orders.CustomerID = Customers.CustomerID;

2.LEFT (OUTER) JOIN:
  
 The LEFT JOIN keyword returns all records from the left table (table1), 
 and the matching records from the right table (table2). 
 The result is 0 records from the right side, if there is no match.
Syntax –
● SELECT column_name(s) FROM table1
LEFT JOIN table2
ON table1.column_name = table2.column_name;
Ex –
● SELECT Customers.CustomerName, Orders.OrderID
FROM Customers
LEFT JOIN Orders ON Customers.CustomerID = Orders.CustomerID ORDER BY Customers.
CustomerName;
3.RIGHT (OUTER) JOIN:
The RIGHT JOIN keyword returns all records from the right table (table2), 
and the matching records from the left table (table1). 
The result is 0 records from the left side, if there is no match.
Syntax –
● SELECT column_name(s) FROM table1
RIGHT JOIN table2
ON table1.column_name = table2.column_name;
Ex –
● SELECT Orders.OrderID, Employees.LastName, Employees.FirstName FROM Orders
RIGHT JOIN Employees ON Orders.EmployeeID = Employees.EmployeeID ORDER BY Orders.
OrderID;
FULL (OUTER) JOIN:
The FULL OUTER JOIN keyword returns all records when there is a match in left (table1)
 or right (table2) table records.
Syntax:
● SELECT column_name(s)

FROM table1
4.FULL OUTER JOIN table2
ON table1.column_name = table2.column_name WHERE condition;
Ex –
● SELECT Customers.CustomerName, Orders.OrderID
FROM Customers
FULL OUTER JOIN Orders ON Customers.CustomerID=Orders.CustomerID ORDER BY Customers.
CustomerName;